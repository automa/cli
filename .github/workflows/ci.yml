name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize]
jobs:
  ci:
    name: CI
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          # - i686-pc-windows-gnu
          # - x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install rust
        uses: dtolnay/rust-toolchain@1.70.0
        with:
          target: ${{ matrix.target }}
      - name: Install linker
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test
        run: cargo test --target ${{ matrix.target }}
  lockfile:
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: dtolnay/rust-toolchain@1.70.0
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lockfile check
        run: cargo update -w --locked
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: dtolnay/rust-toolchain@1.70.0
        with:
          components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v3
      - name: Clippy check
        run: cargo lint
      - name: Format check
        run: cargo format-check
